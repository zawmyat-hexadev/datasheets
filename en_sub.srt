1
00:00:00,70 --> 00:00:10,40
- [Richard] ရှင်းရှင်းလင်းလင်း နားလည်နိုင်သော၊ လိုက်လျောညီထွေရှိသော Code ကို ရေးသားနိုင်ပြီး မလိုလားအပ်သော ချို့ယွင်းချက်များကို မိတ်ဆက်ခြင်းမပြုဘဲ အပြောင်းအလဲတစ်ခုပြုလုပ်သောအခါတွင် ယုံကြည်စိတ်ချမှုရှိမည်ဆိုပါက အံမခန်းဖြစ်မည်မဟုတ်ပေ။

2
00:00:10,40 --> 00:00:12,90
Test.driven Development သည် မိတ်ဆွေအား ထိုနေရာသို့ ရောက်အောင် ကူညီပေးနိုင်တယ်။

3
00:00:12,90 --> 00:00:19,50
မင်္ဂလာပါ၊ ကျွန်တော်က Richard Rout ဖြစ်ပါတယ်၊ ကျွန်တော်က အသေးစား startups နှင့် ကြီးမားသော တည်ထောင်ထားသော ကုမ္ပဏီများအတွက် Web developer တစ်ဦးဖြစ်တယ်။

4
00:00:19,50 --> 00:00:30,20
badly.tested code base ကြောင့်ဖြစ်ရတဲ့ ပျက်စီးဆုံးရှုံးမှုကို ပထမဆုံးလက်တွေ့မြင်ခဲ့ရပြီး ကောင်းမွန်တဲ့ Unit Test တွေနဲ့ ရေးသားထားတဲ့ application ရဲ့ အကျိုးကျေးဇူးတွေကိုလည်း ခံစားခဲ့ရပါတယ်။

5
00:00:30,20 --> 00:00:36,70
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sed nisi lacus sed viverra tellus in hac habitasse. Ut placerat orci nulla pellentesque. Amet volutpat consequat mauris nunc congue nisi. Eget nunc scelerisque viverra mauris in aliquam sem fringilla. Malesuada pellentesque elit eget gravida cum. Fermentum posuere urna nec tincidunt praesent semper feugiat nibh sed. Euismod lacinia at quis risus sed vulputate odio ut. Volutpat est velit egestas dui id ornare. Commodo odio aenean sed adipiscing. Dignissim enim sit amet venenatis urna cursus eget. Varius quam quisque id diam vel quam elementum pulvinar etiam.

6
00:00:36,70 --> 00:00:51,20
ကျွန်တော်တို့က test.driven Development သဘောတရားများ၊ Dependency Injection နှင့် Inversion of Control အကြောင်း အနည်းငယ်ပြောပါမည်၊ စမ်းသပ်နိုင်မှုအတွက် သင့် Web Application ကို မည်သို့တပ်ဆင်ရမည်ကို ကျွန်တော်ပြမည်ဖြစ်ပြီး အသစ်တွင်test.driven Developmentကိုလေ့ကျင့်နည်းကိုသင်ပြပါမယ်။ နှင့် Legacy Code ။

7
00:00:51,20 --> 00:00:52,00
ရှေ့ဆက်ကြစို့။
